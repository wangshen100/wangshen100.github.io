<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2025/09/03/Common-Terms-in-Embedded-Systems/"/>
    <url>/2025/09/03/Common-Terms-in-Embedded-Systems/</url>
    
    <content type="html"><![CDATA[<p>嵌入式常见名词</p><p>2025年8月9日</p><p>6:21</p><p><img src="/media/image1.png">{width&#x3D;”13.055555555555555in”<br>height&#x3D;”2.076388888888889in”}</p><p><strong>A</strong></p><p><strong>ASIC</strong>（专用集成电路） Application-Specific Integrated Circuit. A<br>piece of custom-designed hardware in a chip.<br>专用集成电路。一个在一个芯片上定制设计的硬件。</p><p><strong>address bus</strong> （地址总线） A set of electrical lines connected to the<br>processor and all of the peripherals withwhich itcommunicates. The<br>address bus is used by the processor to select aspecific memory location<br>or register within a particular peripheral. If the address bus contains<br>n electrical lines, the processor can uniquely address up to 2^n such<br>locations.<br>一个连接处理器与所有外设的，用来通讯的电子线路集。地址总线被处理器用来选择在特定外设中的存储器地址或寄存器。如果地址总线有n条电子线路，处理器能唯一寻址高达2^n的地址空间。</p><p><strong>application software</strong>（应用软件） Describes software modules specific<br>to a particular embedded project. Theapplication software is unlikely to<br>be reusable across embedded platforms, simplybecause each embedded<br>system has a different application.<br>用来描述一个特定的嵌入式项目中的某一软件模块。应用软件不象可重用的交叉嵌入式平台，只是因为每一个嵌入式系统有不同的应用软件。</p><p><strong>assembler</strong>（汇编编译器） A software development tool that translates<br>human-readable assembly languageprograms into machine-language<br>instructions that the processor can understandand execute.<br>一个能把人可读的汇编语言程序转换到处理器可理解和运行的机器指令的软件开发工具。</p><p><strong>assembly language</strong>（汇编语言） A human-readable form of a<br>processor&quot;s instruction set. Most processor-specific functions must be<br>written in assembly language.<br>一种人可读的处理器指令集的形式。大多数处理器相关的功能必须用汇编语言编写。</p><p><strong>B</strong></p><p><strong>BSP</strong>（板卡支持包） See board support package. 见board support<br>package。</p><p><strong>binary semaphore</strong>(二元信号) A type of semaphore with just two states.<br>Also called a mutex. 一种只有两种状态的信号。也叫互斥信号。</p><p><strong>board support package</strong>（板卡支持包） Part of a software package that<br>is processor or platform-dependent. Typically,sample source code for the<br>board support package is provided by the package developer. The sample<br>code must be modified as necessary, compiled, and linked with the<br>remainder of the software package.<br>软件包的具有平台依赖性的那一部分。典型地，板卡支持包的样例源程序由包开发者提供。样例源程序必须能在需要时被修改、编译并与软件包的剩下的部分连接起来。</p><p><strong>bond-out processor</strong> （外合处理器） A special version of a processor<br>that has some of the internal signals brought out to external pins. A<br>bond-out processor is most often found within an emulator and is never<br>intended to be used in a production system.<br>一种特殊版本的处理器，它有一些，内部的信号能传达到外置的针脚上。一个外合处理器绝大多数情况下只用在模拟器上，从来不会被特意用在产品系统上。</p><p><strong>Breakpoint</strong> （断点） A location in a program at which execution is to<br>be stopped and control of the processor switched to the debugger.<br>Mechanisms for creating and removing breakpoints are provided by most<br>debugging tools.<br>一个在程序中的地址，在那里程序的执行被停止，并且处理器的控制转换到了除错程序。大多数除错工具提供增加与删除一个断点的机制。</p><p><strong>C</strong></p><p><strong>CISC</strong>（复杂指令集计算机） Complex Instruction Set Computer. Describes<br>the architecture of a processor family. CISC processors generally<br>feature variable-length instructions, multiple addressing formats, and<br>contain only a small number of general-purpose registers. Intel&quot;s 80x86<br>family is the quintessential example of CISC. Contrast with RISC.<br>复杂指令集计算机。对一种处理器架构的描述。CISC处理器一般产生变长的指令，多种地址格式，并且仅仅有少量的通用寄存器。Intel的80x86家族是是典型的CISC处理器。相对于RISC而言。</p><p><strong>CPU</strong>（中央处理器） Central Processing Unit. The part of a processor<br>that executes instructions. 中央处理器。处理器中执行指令的那一部分。</p><p><strong>Compiler</strong>（编译器） A software development tool that translates<br>high-level language programs into the machine-language instructions that<br>a particular processor can understand and execute.<br>把高级编程语言程序转换到只有特定的处理器能了解和执行的机器指令的一种软件开发包。</p><p><strong>context</strong> （上下文） The current state of the processor&quot;s registers<br>and flags. 处理器当前的状态和标志。</p><p><strong>context switch</strong>（上下文切换） The process of switching from one task<br>to another in a multitasking operating system. A context switch involves<br>saving the context of the running task and restoring the<br>previously-saved context of the other. The piece of code that does this<br>is necessarily processor-specific.<br>在多任务操作系统中我一个任务切换到另一个的过程。上下文切换包括保存正在运行的任务的上下文和恢复早先保存的另一个任务的上下文。做这个工作的一段代码必须具有处理器特权。</p><p><strong>counting semaphore</strong>（计数信号） A type of semaphore that is used to<br>track multiple resources of the same type. An attempt to take a counting<br>semaphore is blocked only if all of the available resources are in use.<br>Contrast with binary semaphore.<br>一种用来跟踪多个相同类型资源的信号灯。仅仅在所有可用的资源都被用完了时才阻塞。相对二元信号而言。</p><p><strong>critical section</strong>（临界段） A block of code that must be executed in<br>sequence and without interruption to guarantee correct operation of the<br>software. See also race condition.<br>一段必须按次序执行的代码，并且不能被中断，否则不能保证软件正确地操作。参照：竞争状况。</p><p><strong>cross-compiler</strong>（交叉编译器） A compiler that runs on a different<br>platform than the one for which it produces object code. A<br>cross-compiler runs on a host computer and produces object code for the<br>target.<br>一个运行在不同的平台上的编译器，其中之一能产生目标代码。交叉编译器在主机上运行并且产生目标机的目标代码。</p><p><strong>D</strong></p><p><strong>DMA</strong>（直接内存访问） Direct Memory Access. A technique for<br>transferring data directly between two peripherals (usually memory and<br>an I&#x2F;O device) with only minimal intervention by the processor. DMA<br>transfers are managed by a third peripheral called a DMA controller.<br>直接内存访问。一种直接在两个外设（通常是内存和I&#x2F;O设备）之间进行数据传输的技术，它只要处理器最少的介入。DMA传输由叫DMA控制器的第三方外设进行管理。</p><p><strong>DRAM</strong>（动态随机访问存储器） Dynamic Random-Access Memory. A type of<br>RAM that maintains its contents only as long as the data stored in the<br>device is refreshed at regular intervals. The refresh cycles are usually<br>performed by a peripheral called a DRAM controller.<br>动态随机访问存储器。一种RAM，存储在其设备中的数据被定期刷新时才能保存它的内容。刷新周期一般由一个叫DRAM控制器的外设完成。</p><p><strong>Data bus</strong>（数据总线） A set of electrical lines connected to the<br>processor and all of the peripherals with which it communicates. When<br>the processor wants to read (write) the contents of a memory location or<br>register within a particular peripheral, it sets the address bus pins<br>appropriately and receives (transmits) the contents on the data bus.<br>连接处理器与所有外设进行通讯的电子线路集。当一个处理器想去写（读）某一特定外设中的存储器地址或寄存器中的内容时，处理器设置地址总线并在数据总线上接收（传输）内容。</p><p><strong>Deadline</strong>（死线） The time at which a particular set of computations<br>must be completed. See also real-time system.<br>一个特定计算必须被完成的时间。请看实时系统。</p><p><strong>Deadlock</strong>（死锁） An unwanted software situation in which an entire<br>set of tasks is blocked, waiting for an event that only a task within<br>the same set can cause. If a deadlock occurs, the only solution is to<br>reset the hardware. However, it is usually possible to prevent deadlocks<br>altogether by following certain software design practices.<br>一种不希望出现的软件状态，在这个状态下，所有的任务因为等待一个只有在这些被阻塞任务之一才能产生的事件而被阻塞。如果死锁发生，唯一解决的方法是重启动硬件。但是，通过可靠的软件设计实践活动通常可以防止死锁的发生。</p><p><strong>debug monitor</strong>（除错监视程序） A piece of embedded software that has<br>been designed specifically for use as a debugging tool. It usually<br>resides in ROM and communicates with a debugger via a serial port or<br>network connection. The debug monitor provides a set of primitive<br>commands to view and modify memory locations and registers, create and<br>remove breakpoints, and execute your program. The debugger combines<br>these primitives to fulfill higher-level requests like program download<br>and single-step.<br>嵌入式软件被特殊设计来作为除错工具的一部分。它一般被放在ROM中，通过串口或网络与除错器进行通讯。除错监视程序提供一个简单的命令集来显示和内存地址和寄存器、建立和移除断点，并且运行你的程序。除错监视器组合这些简单的命令去实现象程序下载各单步调试等高端的请求。</p><p><strong>Debugger</strong>（除错器） A software development tool used to test and<br>debug embedded software. The debugger runs on a host computer and<br>connects to the target through a serial port or network connection.<br>Using a debugger you can download software to the target for immediate<br>execution. You can also set breakpoints and examine the contents of<br>specific memory locations and registers.<br>一个软件开发工具，被用来对嵌入式软件进行测试和除错。除错器在宿主机上运行并且通过串口或网络连接到目标机上。你能使用除错器下载软件到目标机并直接运行。你也可以设置断点并检查特定内存地址或寄存器的内容。</p><p><strong>device driver</strong>（设备驱动程序） A software module that hides the<br>details of a particular peripheral and provides a high-level programming<br>interface to it.<br>一个软件模块，它隐藏特定外设的细节并提供高级的外设编程接口。</p><p><strong>device programmer</strong>（设备编程器） A tool for programming non-volatile<br>memories and other electrically-programmable devices. Typically, the<br>programmable device is inserted into a socket on the device programmer<br>and the contents of a memory buffer are then transferred into it.<br>一种用来对不挥发内存和其他电可编程设备进行编程的工具。典型地，可编程设备被插到设备编程器的接口上，接着内存缓存器中的内容被传送到它里面。</p><p><strong>digital signal processor</strong>（数字信号处理器） A device that is similar<br>to a microprocessor, except that the internal CPU has been optimized for<br>use in applications involving discrete-time signal processing. In<br>addition to standard microprocessor instructions, DSPs usually support a<br>set of complex instructions to perform common signal-processing<br>computations quickly.Common DSP families are TI&quot;s 320Cxx and<br>Motorola&quot;s 5600x series.<br>一种类似于微处理器的的设备，不同的是它内部的CPU被优化，用于特定的应用，如离散信号处理。除了标准的微处理器指令外，DSP常常支持复杂指令集去非常快地完成通用的信号处理计算。通用DSP家庭是TI的320Cxx和Motorola的5600x系列。</p><p><strong>E</strong></p><p><strong>EEPROM</strong>（电可擦的，可编程的只读存储器） Electrically Erasable,<br>Programmable Read-Only Memory. (Pronounced&quot;Double-E&quot;-PROM.) A type of<br>ROM that can be erased electronically.<br>电可擦的，可编程的只读存储器。一种ROM能被电擦除。</p><p><strong>EPROM</strong>（可擦的，可编程的只读存储器） Erasable, Programmable Read-Only<br>Memory. A type of ROM that can be erased by exposing it to ultraviolet<br>light. Once erased, an EPROM can be reprogrammed with the help of a<br>device programmer.<br>一种可用紫外线擦除的存储器。一次擦除后，EPROM可以在设备编程器的帮助下被重编程。</p><p><strong>embedded system</strong>（嵌入式系统） A combination of computer hardware and<br>software, and perhaps additional mechanical or other parts, designed to<br>perform a dedicated function. In some cases, embedded systems are part<br>of a larger system or product, as is the case of an anti-lock braking<br>system in a car. Contrast with general-purpose computer.<br>计算机硬件和软件的结合体，或许还加上机械等其他部分，被设计来完成专门的功能。在一些情况下，嵌入式系统是一个大的系统或产品的一部分，就象汽车上的防抱死装置。与通用计算机相对。</p><p><strong>Emulator</strong>(仿真器) Short for In-Circuit Emulator (ICE). A debugging<br>tool that takes the placeof-emulates-the processor on your target board.<br>Emulators frequently incorporate a special &quot;bond-out&quot; version of the<br>target processor that allows you to observe and record its internal<br>state as your program is executing .<br>在线仿真器的简写。一个在你的目标板上放置仿真的处理器的调试工具。仿真器经常和一目标处理器的一种”外合”版本合在一起，这个版本的的处理器充许你运行程序时观察和记录它的内部状态。</p><p><strong>Executable</strong>（可执行的） A file containing object code that is ready<br>for execution on the target. All that remains is to place the object<br>code into a ROM or download it via a debugging tool.<br>一个包含准备在目标机上运行的目标代码的文件。放置目标代码到ROM中或通过调试工具下载。</p><p><strong>F</strong></p><p><strong>Firmware</strong>（固件） Embedded software that is stored as object code<br>within a ROM. This name is most common among the users of digital signal<br>processors.<br>是作为目标代码存贮在ROM中的嵌入式软件。这个名字在数字信号处理器的用户中相当流行。</p><p><strong>flash memory</strong> （闪存） A RAM-ROM hybrid that can be erased and<br>rewritten under software control. Such devices are divided into blocks,<br>called sectors, that are individually-erasable. Flash memory is common<br>in systems that require nonvolatile data storage at very low cost. In<br>some cases, a large fash memory may even be used instead of a<br>disk-drive.<br>一种RAM-ROM的混血儿，它能在软件的控制下被擦除和重写。一些设备被分成叫段组的块，能个别地可擦。闪存用在需要很便宜的非易失数据存贮器的地方，一个大容量的闪存甚至被用作磁盘驱动器。</p><p><strong>G</strong></p><p><strong>general-purpose computer</strong>（通用计算机） A combination of computer<br>hardware and software that serves as a general-purpose computing<br>platform. For example, a personal computer. Contrast with embedded<br>system.<br>当作通用计算平台的计算机硬件与软件的组合。例如，PC。相对于嵌入式计算机。</p><p><strong>H</strong></p><p><strong>HLL</strong> See high-level language. 查阅高级语言。</p><p><strong>Heap</strong>（堆） An area of memory that is used for dynamic memory<br>allocation. Calls to malloc and free and the C++ operators new and<br>delete result in run-time manipulation of the heap.<br>一块被用作动态内存分配的内存区域。调用malloc和free、C++的操作符new、delete在运行时进行堆的操作。</p><p><strong>high-level language</strong>（高级语言） A language, such as C or C++, that<br>is processor-independent. When programming in a high-level language, it<br>is possible to concentrate on algorithms and applications without<br>worrying about the details of a particular processor.<br>一种语言，象C或C++，是处理器独立的。当在高级语言上编程时，不需要考虑特定处理器的细节，只用关心算法和应用。</p><p><strong>Host</strong>（主机） A general-purpose computer that communicates with the<br>target via a serial port or network connection. This term is usually<br>used to distinguish the computer on which the debugger is running from<br>the embedded system that is being developed.<br>一台通用计算机，它通过串口或网络连接与目标机通讯。这处名词一般用来区别调试程序运行的计算机和被开发的嵌入式系统。</p><p><strong>I</strong></p><p><strong>ICE</strong> In-Circuit Emulator. See emulator. 在线仿真器。查阅仿真器。</p><p><strong>I&#x2F;O</strong>（输入&#x2F;输出） Input&#x2F;Output. The interface between a processor and<br>the world around it. The simplest examples are switches (inputs) and<br>LEDs (outputs).<br>输入&#x2F;输出。处理器与外界的交互界面。最简单的例子是开关（输入）和发光二级管（输出）。</p><p><strong>I&#x2F;O device</strong>（IO设备） A piece of hardware that interfaces between the<br>processor and the outside world. Common examples are switches and LEDs,<br>serial ports, and network controllers.<br>一种介于处理器和外界之间的硬件设备。一般的实例是开关、LED、串口和网络控制器。</p><p><strong>I&#x2F;O map</strong>（I&#x2F;O映射） A table or diagram containing the name and<br>address range of each peripheral addressable by the processor within the<br>I&#x2F;O space. I&#x2F;O maps are a helpful aid in getting to know the target.<br>一张包含每个外设的名字和地址的表格或图表，可由处理器在I&#x2F;O空间中设定地址。I&#x2F;O映射对得知目标机情况非常有利。</p><p><strong>I&#x2F;O space</strong>（I&#x2F;O空间） A special memory region provided by some<br>processors and generally reserved for the attachment of I&#x2F;O devices.<br>Memory locations and registers within an I&#x2F;O space can be accessed only<br>via special instructions. For example, processors in the 80x86 family<br>have special I&#x2F;O space instructions called in and out. Contrast with<br>memory space.<br>一个由处理器提供的特殊内存区域，一般为为I&#x2F;O设备的附件保留。在I&#x2F;O空间的内存位置和寄存器只能通过特殊的指定进行访问。例如：80X86家族的处理器有叫做in<br>&#x2F; out的特殊的I&#x2F;O空间指令。相对内存空间而言。</p><p><strong>ISR</strong>（中断服务程序） See interrupt service routine. instruction<br>pointer（指令指针） A register in the processor that contains the<br>address of the next instruction to be executed. Also known as a program<br>counter. 包含下一条要执行指令地址的处理器中的寄存器。也叫程序计数器。</p><p><strong>Interrupt</strong>（中断） An asynchronous electrical signal from a<br>peripheral to the processor. When the peripheral asserts this signal, we<br>say that an interrupt occurs. When an interrupt occurs, the current<br>state of the processor is saved and an interrupt service routine is<br>executed. When the interrupt service routine exits, control of the<br>processor is returned to whatever part of the software was previously<br>running.<br>一个从外设到处理器的异步电信号。当外设发出这个信号，我们说一个中断发生。当一个中断发生，当前的处理器状态被保存并且中断服务程序开始运行。当中断服务程序退出，对处理器的控制权转到先前运行的那个软件上。</p><p><strong>interrupt latency</strong>（中断延迟） The amount of time between the<br>assertion of an interrupt and the start of the associated interrupt<br>service routine. 在中断发生和相关的中断服务程序运行之间的时间长短。</p><p><strong>interrupt service routine</strong>（中断服务程序） A piece of software<br>executed in response to a particular interrupt.<br>响应特定中断而运行的一小段软件。</p><p><strong>interrupt type</strong>（中断类型） A unique number associated with each<br>interrupt. 和每一个中断相关联的唯一数字。</p><p><strong>interrupt vector</strong> （中断向量） The address of an interrupt service<br>routine. 中断服务程序所在的地址。</p><p><strong>interrupt vector table</strong>（中断向量表） A table containing interrupt<br>vectors and indexed by interrupt type. This table contains the<br>processor&quot;s mapping between interrupts and interrupt service routines<br>and must be initialized by the programmer.<br>一个表格，包含由中断类型决定的中断向量和索引。这个表格包含中断与中断服务程序之间的处理器的映射，必须由程序员进行初始化。</p><p><strong>intertask communication</strong>（进程间通讯） A mechanism used by tasks and<br>interrupt service routines to share information and synchronize their<br>access to shared resources. The most common building blocks of intertask<br>communication are semaphores and mutexes.<br>一种被用来在任务和中断服务程序之间共享信息和同步它们对共享资源访问的机制。大部分进程间通讯的建立的基石是信号灯和互斥。</p><p><strong>K</strong></p><p><strong>Kernel</strong>（内核） An essential part of any multitasking operating<br>system, the kernel contains just the scheduler and context-switch<br>routine.<br>任何多任务操作系统的本质部分，内核仅仅包含调度程序和上下文切换进程。</p><p><strong>L</strong></p><p><strong>Linker</strong>（连接程序） A software development tool that accepts one or<br>more object files as input and outputs a relocatable program. The linker<br>is thus run after all of the source files have been compiled or<br>assembled.<br>一种能把一个或更多目标文件组合成可输入和输出的可重定位程序的开发工具。连接程序在所有的源文件都被编译或汇编之后运行。</p><p>**Locator（**定位程序） A software development tool that assigns<br>physical addresses to the relocatable program produced by the linker.<br>This is the last step in the preparation of software for execution by an<br>embedded system and the resulting file is called an executable. In some<br>cases, the locator&quot;s function may be hidden within the linker.<br>一种分配物理地址给连接程序处理过的可重定位程序的软件开发工具。这是准备一个软件在嵌入式系统中运行的最后一步，并且结果文件叫做可执行的。在一些情况下，定位程序功能隐藏在连接程序中。</p><p><strong>logic analyzer</strong>（逻辑分析仪） A hardware debugging tool that can be<br>used to capture the logic levels (0 or 1) of dozens, or even hundreds,<br>of electrical signals in real-time. Logic analyzers can be quite helpful<br>for debugging hardware problems and complex processor-peripheral<br>interactions.<br>一种硬件调试工具，能捕获实时电信号的许多逻辑电平（0或1），逻辑分析仪在调试硬件问题和复杂的处理外设交互时相当有用。</p><p><strong>M</strong></p><p><strong>memory map</strong>（内存映射） A table or diagram containing the name and<br>address range of each peripheral addressable by the processor within the<br>memory space. Memory maps are a helpful aid in getting to know the<br>target.<br>一个在内存空间中的，包含每个外设的名字和可由处理器设置的地址范围的表格或图表。内存映射有助于了解目标机情况。</p><p><strong>memory-mapped I&#x2F;O</strong>（内存映射I&#x2F;O） An increasingly common hardware<br>design methodology in which I&#x2F;O devices are placed into the memory space<br>rather than the I&#x2F;O space. From the processor&quot;s point of view,<br>memory-mapped I&#x2F;O devices look very much like memory devices.<br>一种日益流行的硬件设计方法，在这种方法中，I&#x2F;O设备被放置在内存空间而不是I&#x2F;O空间。从处理器的观点看，内存映射I&#x2F;O设备看上去很象内存一样。</p><p><strong>memory space</strong>（内存空间） A processor&quot;s standard address space.<br>Contrast with I&#x2F;O space. 一个处理器的标准地址空间。相对I&#x2F;O空间。</p><p><strong>Microcontroller</strong>（微控制器） A microcontroller is very similar to a<br>microprocessor. The main difference is that a microcontroller is<br>designed specifically for use in embedded systems Microcontrollers<br>typically include a CPU, memory (a small amount of RAM and&#x2F;or ROM), and<br>other peripherals on the same chip. Common examples are the 8051,<br>Intel&quot;s 80196, and Motorola&quot;s 68HCxx series.<br>微控制器很像微处理器。主要的差别在于微控制器被特殊设计用在嵌入式系统中。微控制器典型地包括CPU、内存（很小的RAM或ROM），还有其他的外设，它们在同一块芯片上。常见的例子是：8051、Intel80196、Motorola68HCxx系列。</p><p><strong>Microprocessor</strong>（微处理器） A piece of silicon containing a<br>general-purpose CPU. The most common examples are Intel&quot;s 80x86 and<br>Motorola&quot;s 680x0 families.<br>一片包含通用CPU的硅片。常见的例子是：Intel80x86、Motorola 680x0系列。</p><p><strong>Monitor</strong>（监视器） In the context of this book, a debug monitor.<br>However, there is a second meaning for this word that is associated with<br>intertask communication. In that context, a monitor is a language-level<br>synchronization feature.<br>在这本书的上下文中，是指调试监视器。然而，第二个意思与任务间通讯相关联。在那个上下文中，监视器是高级同步机制的特性。</p><p><strong>Multiprocessing</strong>（多处理） The use of more than one processor in a<br>single computer system. So-called &quot;multiprocessor systems&quot; usually<br>have a common memory space through which the processors can communicate<br>and share data. In addition, some multiprocessor systems support<br>parallel processing.<br>在单个的计算机系统中有多个处理器。被叫作”多处理器系统”的一般有公用的内存空间，处理器通过它们进行通讯和共享数据。另外，一些多处理器系统支持并行处理。</p><p><strong>Multitasking</strong> （多任务） The execution of multiple software routines<br>in pseudo-parallel. Each routine represents a separate &quot;thread of<br>execution&quot; and is referred to as a task. The operating system is<br>responsible for simulating parallelism by parceling out the processor&quot;s<br>time.<br>伪并行运行的多个软件程序。每一个程序表现得像分开的”执行的线程”并且被看作是一个任务。操作系统通过分配处理器时间来模拟并行方式。</p><p><strong>Mutex</strong>（互斥） A data structure for mutual exclusion, also known as a<br>binary semaphore. A mutex is basically just a multitasking-aware binary<br>flag that can be used to synchronize the activities of multiple tasks.<br>As such, it can be used to protect critical sections of the code from<br>interruption and shared resources from simultaneous use.<br>表现互斥现象的数据结构，也被当作二元信号灯。一个互斥基本上是一个多任务敏感的二元信号，它能用作同步多任务的行为，它常用作保护从中断来的临界段代码并且在共享同步使用的资源。</p><p><strong>mutual exclusion</strong>（互斥现象） A guarantee of exclusive access to a<br>shared resource. In embedded systems, the shared resource is typically a<br>block of memory, a global variable, or a set of registers. Mutual<br>exclusion can be achieved with the use of a semaphore or mutex.<br>唯一访问共享资源的保证。在嵌入式系统中，共享的资源典型的有内存块或寄存器组。互斥现象能由使用信号灯或互斥完成。</p><p><strong>N</strong></p><p><strong>NVRAM</strong> Non-Volatile Random-Access Memory. A type of RAM that retains<br>its data even when the system is powered down. NVRAM frequently consists<br>of an SRAM and a long-life battery.<br>非易失的随机访问存储器。一种能在系统关机的情况下保持它的数据的RAM。NVRAM常常由SRAM和长寿命电池组成。</p><p><strong>O</strong></p><p><strong>OTP</strong> See one-time programmable. object code（目标代码） A set of<br>processor-readable opcodes and data. The output of compilers,assemblers,<br>linkers, and locators are files containing object code.<br>处理器能读的操作码和数据。编译器、汇编器、连接器和定位器的输出文件都含有目标代码。</p><p><strong>object file</strong>（目标文件） A file containing object code. The output of<br>a compiler or assembler. 包含目标代码的文件。编译器或汇编器的输出。</p><p><strong>one-time programmable</strong>（一次可编程的） Any programmable device, like<br>a PROM, that can be programmed just once by the end user. However, this<br>term is used almost exclusively to refer to microcontrollers with<br>on-chip PROM.<br>任一可编程的设备，像PROM，仅仅能被最终用户编程一次。然而，这个术语一般被专有地使用在拥有片上PROM的微控制器上。</p><p><strong>opcode</strong> A sequence of bits that is recognized by the processor as one<br>of the instructions in its instruction set.<br>一串被处理器验证过的二进制位的序列，它作为其指令集的一个子集。</p><p><strong>operating system</strong>（操作系统） A piece of software that makes<br>multitasking possible. An operating system typically consists of a set<br>of function calls, or software interrupts, and a periodic clock tick.<br>The operating system is responsible for deciding which task should be<br>using the processor at a given time and for controlling access to shared<br>resources.<br>使多任务能够实现的一个软件。一个操作系统典型地由一个函数调用集、软件中断和定期时钟周期组成。一个操作系统负责决定哪一个任务在给定的时间将使用处理器，并且控制对共享资源的访问。</p><p><strong>Oscilloscope</strong>（示波器） A hardware debugging tool that allows you to<br>view the voltage on one or more electrical lines. For example, you might<br>use an oscilloscope to determine if a particular interrupt is currently<br>asserted.<br>一种硬件调试工具，它让你能观察到一个或更多电路上的电压。例如：如果一个特殊的中断发生，你可以用一个示波器去检测它。</p><p><strong>P</strong></p><p><strong>PROM</strong>（可编程只读存储器） Programmable Read-Only Memory. A type of<br>ROM that can be written (programmed) with a device programmer. These<br>memory devices can be programmed only once, so they are sometimes<br>referred to as write-once or one-time programmable devices.<br>可编程只读存储器。能被设备编程器写的一种ROM。这种内存设备可以被编程一次，所以它们有时被作为写一次或一次性编程设备来看待。</p><p><strong>parallel processing</strong>（并行进程） The ability to apply two or more<br>processors to a single computation.<br>一种在单个计算机上运行两个或多个程序的能力。</p><p><strong>Peripheral</strong> （外设） A piece of hardware other than the processor,<br>usually memory or an I&#x2F;O device. The peripheral may reside within the<br>same chip as the processor, in which case it is called an internal<br>peripheral.<br>一种不同于处理器的硬件设备，常指内存或I&#x2F;O设备。外设经常和处理器在一片芯片上，在这种情况下，它被称为集成外设。</p><p><strong>physical address</strong>（物理地址） The actual address that is placed on<br>the address bus when accessing a memory location or register.<br>当访问内存位置或寄存器时，在地址总线上的真实的地址。</p><p><strong>Preemptive</strong>（抢先） A scheduler is said to be preemptive if it allows<br>the running task to be suspended when a higher-priority task becomes<br>ready. Non-preemptive schedulers are easier to implement but less<br>appropriate for embedded systems.<br>当一个高优先级的任务准备好时，充许正在运行的任务被挂起的调度策略被称为优先。无优先的调度策略更容易实现一些但适合在嵌入式系统中使用。</p><p><strong>Polling</strong>(轮询) A method of interfacing with hardware that involves<br>repeatedly reading a status register until the device has reached the<br>awaited state. Device drivers are either polling or interrupt-driven,<br>with the latter being more generally preferred.<br>一种硬件交互方法，不断读状态寄存器，直到设备进入等待状态。设备驱动程序不是轮询的就是中断驱动的，后一种越来越成为首选的。</p><p><strong>Priority</strong>（优先） The relative importance of one task compared to<br>another. 一个任务与其他任务相比的重要关系。</p><p><strong>priority inversion</strong>（优先转置） An unwanted software situation in<br>which a high-priority task is delayed while waiting for access to a<br>shared resource that is not even being used at the time. For all<br>practical purposes, the priority of this task has been lowered during<br>the delay period.<br>一种不希望发生的软件状态，在此状态一个高优先级任务因为等待访问一个那时不再使用的共享资源而被延迟。在所有的实践目标中，这个任务的优先级在延迟周期内都被降低。</p><p><strong>Process</strong>（进程） A word that is often confused with task or thread.<br>The crucial distinction is that all of the tasks in a system share a<br>common memory space. Processes, on the other hand, always have their own<br>private memory space. Processes are common in multi-user systems but are<br>rarely, if ever, found in embedded systems.<br>这个名词经常与任务或线程混淆。至关重要的差别在于系统中的所有任务共享公共的内存空间。进程，另一方面，常常有它们自己的私有内存空间。进程在多用户系统中，但少有地，如有可能，也可在嵌入式系统中。</p><p><strong>Processor</strong>（处理器） A generic term that does not distinction between<br>microprocessor, microcontroller, and digital signal processor.<br>一个对于微处理器、微控制器他数字信号处器无差别的通用术语。</p><p><strong>processor family</strong>（处理器族） A set of related processors, usually<br>successive generations from the same manufacturer. For example, Intel&quot;s<br>80x86 family began with the 8086 and now includes the 80186, 286, 386,<br>486, Pentium, and many others. The later models in a family are<br>typically backwards-compatible with the ones that came before.<br>一个相关的处理器集，常常连续地从一个生产商产生。例如：Intel&quot;s<br>80x86族开始从8086开始，现在有80186, 286, 386, 486,<br>Pentium及其他。在一个族中，稍后的产品典型地向后兼容在它以前生产的产品。</p><p><strong>processor-independent</strong>（处理器无关） A piece of software that is<br>independent of the processor on which it will be run. Most programs that<br>can be written in a high-level language are processor-independent.<br>Contrast with processor-specific.<br>一个与处理器无关的，并能在其上运行的软件。大多数用高级语言编写程序是处理器无关的。相对于处理器定制。</p><p><strong>processor-specific</strong>（处理器定制） A piece of software that is highly<br>dependent on the processor on which it will be run. Such code must<br>usually be written in assembly language. Contrast with<br>processor-independent.<br>一个高度依赖处理器的软件，在上其才能运行。一些代码必须用汇编语言编写。相对于处理器无关。</p><p><strong>Profiler</strong>（明细观察程序） A software development tool that collects<br>and reports execution statistics for your programs. These statistics<br>include the number of calls to each subroutine and the total amount of<br>time spent within each. This data can be used to learn which subroutines<br>are the most critical and, therefore, demand the greatest code<br>efficiency.<br>一种报告你的程序运行统计数据的软件调试工具。这些统计数据包括调用每个子程序的次数和用去的时间。这些数据常被用来了解哪些子程序是最关键的，并且，由此要求使最好的代码有效率。</p><p>program counter See instruction pointer.</p><p><strong>R</strong></p><p><strong>RAM</strong>（随机访问存储器） Random-Access Memory. A broad classification<br>of memory devices that includes all devices in which individual memory<br>locations may be read or written as required.<br>随机访问存储器。一个包含了所有每个地址能被按需读写的存储设备的粗略分类。</p><p><strong>RISC</strong>（精简指令集计算机） Reduced Instruction Set Computer. Describes<br>the architecture of a processor family. RISC processors generally<br>feature fixed-length instructions, a load-store memory architecture, and<br>a large number of general-purpose registers and&#x2F;or register windows. The<br>MIPS processor family is an excellent example. Contrast with CISC.<br>精简指令集计算机。一个处理器族的描述。RISC处理器一般的特征是固定长度的指令集，一个负载储备存储结构，和大量通用寄存器，及寄存器窗口。MIPS处理器族是极好的例子。相对CISC而言。</p><p><strong>ROM</strong>（只读存储器） Read-Only Memory. A broad classification of memory<br>devices that includes all devices in which the individual memory<br>locations may be read, but not written.<br>只读存储器。一个包括所的的每个地址只能被读，不能被写的存储器的大概分类。</p><p><strong>ROM emulator</strong>（ROM模拟器） A debugging tool that takes the place<br>of-or emulates-the ROM on your target board. A ROM emulator acts very<br>much like a debug monitor, except that it includes its own serial or<br>network connection to the host.<br>一种在你的目标板上代替或模拟ROM的调试工具。ROM模拟器动作起来象一个除错监视器，除了它包含自己连到主机上的串口或网络外。</p><p><strong>ROM monitor</strong> See debug monitor.</p><p><strong>RTOS</strong>（实时操作系统） Real-Time Operating System. An operating system<br>designed specifically for use in real-time systems.<br>实时操作系统。一种被特殊设计来用在实时系统中的操作系统。</p><p><strong>race condition</strong>（竞争状态） A situation in which the outcome of a<br>program may be affected by the exact order in which the instructions are<br>executed. Race conditions are only an issue where interrupts and&#x2F;or<br>preemption are possible and where critical sections exist.<br>一种程序运行的结果可能被指令执行的顺序影响的情形。竞争状态仅仅有一种情况下产生，在此处中断或（和）优先抢占是充许的并且有一个临界区存在。</p><p><strong>real-time system</strong>（实时系统） Any computer system, embedded or<br>otherwise, that has deadlines. The following question can be used to<br>distinguish real-time systems from the rest: &quot;Is a late answer as bad,<br>or even worse, than a wrong answer?&quot; In other words, what happens if<br>the computation doesn&quot;t finish in time? If nothing bad happens, it&quot;s<br>not a real-time system. If someone dies or the mission fails, it&quot;s<br>generally considered &quot;hard&quot; real-time, which is meant to imply that<br>the system has &quot;hard&quot; deadlines. Everything in between is &quot;soft&quot;<br>real-time.<br>任何计算机系统，嵌入的或其他的，有一个死线。以下的问题可经被用来区分实时系统与其他的系统：”是迟到的回答坏，还是一个错误的回答坏？”换句话说，如果计算机没有在指定时间内完成它的工作会发生什么？如果什么也没有发生，它不是一个实时系统。如果一些人死或任务失败，它被认为是”硬”实时系统，意思是系统有一个”硬”死线。介于两者之间的是”软”实时系统。</p><p><strong>Recursive</strong>（递归） Said of software that calls itself. Recursion<br>should generally be avoided in an embedded system, since it frequently<br>requires a large stack.<br>自己调用自己的程序的说法。递归一般在嵌入式系统中是不充许的，因为它常常占有大量的堆栈空间。</p><p><strong>Reentrant</strong>（可再入的） Said of software that can be executed multiple<br>times simultaneously. A reentrant function can be safely called<br>recursively or from multiple tasks. The key to making code reentrant is<br>to ensure mutual exclusion whenever accessing global variables or shared<br>registers.<br>可同时多次运行的程序的说法。可再入的函数可以被安全地递归调用或由多任务多次调用。使代码可再入的关键在于确保在访问全局变量或共享寄存器时互斥现象发生。</p><p><strong>Register</strong>（寄存器） A memory location that is part of a processor or<br>an I&#x2F;O device. In other words, it&quot;s not normal memory. Generally, each<br>bit or set of bits within the register controls some behavior of the<br>larger device.<br>是处理器或I&#x2F;O设备一部分的储存器的地址。换句话说，不是标准的储存器。一般地，在寄存器控制每一二进制位或二进制位的集控制大量设备的一些行为。</p><p><strong>Relocatable</strong>（可重定位的） A file containing object code that is<br>almost ready for execution on the target. The final step is to use a<br>locator to fix the remaining relocatable addresses within the code. The<br>result of that process is an executable.<br>包含几乎可以准备好在目标机上运行的目标代码的文件。最后一步是使用定位程序去整理保留在代码中的可重定位地址。这个步骤的结果是一个可执行的程序。</p><p><strong>reset address</strong>（重启地址） The address from which the first<br>instruction will be fetched after the processor is powered on or reset.<br>一个处理器上电或重启后第一个指令能被从之取出来的地址。</p><p><strong>reset code</strong>（重启代码） A small piece of code that is placed at the<br>reset address. The reset code is usually written in assembly language<br>and may simply be the equivalent of &quot;jump to the startup code.&quot;<br>一段被放置在重启地址的代码。重启代码一般用汇编语言编写并且可能相当简单，只是与”跳转到开始代码”这样的意思相同。</p><p><strong>reset vector</strong> See reset address.</p><p><strong>S</strong></p><p><strong>SRAM</strong>（静态随机访问储存器） Static Random-Access Memory. A type of<br>RAM that retains its contents as long as the system is powered on. Data<br>stored in an SRAM is lost when the system is powered down or reset.<br>静态随机访问储存器。一种在系统上电时以保持它的内容的储存器。当系统断电或重启时，保存在SRAM中的内容将丢失。</p><p><strong>Scheduler</strong>（调度程序） The part of an operating system that decides<br>which task to run next. This decision is based on the readiness of each<br>task, their relative priorities, and the specific scheduling algorithm<br>implemented.<br>操作系统中决定下一次哪个任务运行的那部分。决定基于每一个任务的就绪，它们的优先级关系，和特殊调度算法的实现。</p><p><strong>Semaphore</strong>（信号量） A data structure that is used for intertask<br>synchronization. Semaphores are usually provided by the operating<br>system. 用于进程间同步的数据结构。信号灯常常由操作系统提供。</p><p><strong>Simulator</strong>（仿真器） A debugging tool that runs on the host and<br>pretends to be the target processor. A simulator can be used to test<br>pieces of the software before the embedded hardware is available.<br>Unfortunately, attempts to simulate interactions with complex<br>peripherals are often more trouble than they are worth.<br>一种运行在主机上，装作目标机处理器的调试工具。仿真器一般用来测试嵌入式硬件可用之前的软件。不幸地，与模拟与复杂地外设进行交互的尝试常常比它们做到的更差。</p><p><strong>software interrupt</strong>（软件中断） An interruption of a program that is<br>initiated by a software instruction. Software interrupts are commonly<br>used to implement breakpoints and operating system entry points. Unlike<br>true interrupts, they occur synchronously with respect to program<br>execution. In other words, software interrupts always occur at the<br>beginning of an instruction execution cycle.<br>由软件指令发起的的一个程序的中断。软件中断被用来实现中断点他操作系统进入点。不象真实的中断，那些中断在不防碍程序执行时同步发生。换句话说，软件中断常常在指令运行周期的开始发生。</p><p><strong>Stack</strong>（堆栈） An area of memory that contains a last-in-first-out<br>queue of storage for parameters, automatic variables, return addresses,<br>and other information that must be maintained across function calls. In<br>multitasking situations, each task generally has its own stack.<br>一个包含后进先出队列的内存区域，用来存储参数、自动变量、返回地址和其他一些必须在函数调用中进行维护的信息。在多任务情况下，每一个任务一般都有自己的堆栈区。</p><p><strong>stack frame</strong>（堆栈帧） An area of the stack associated with a<br>particular function call. 一个关联特殊函数调用的堆栈区域。</p><p><strong>startup code</strong>（启动代码） A piece of assembly language code that<br>prepares the way for software written in a high-level language. Most<br>C&#x2F;C++ cross-compilers come with startup code that you can modify,<br>compile, and link with your embedded programs.<br>一个汇编语言代码，它为高级语言写的软件准备好运行的前期工作。大多数C&#x2F;C++交叉编译器在你可以修改、编译他连接你的嵌入式程序时与启动代码一起来到。</p><p><strong>T</strong></p><p><strong>Target</strong>（目标机） Another name for the embedded system. This term is<br>usually used during software development, to distinguish the embedded<br>system from the host with which it communicates.<br>嵌入式系统的另一个名字。这个术语常常在软件开发期间使用，用来区别与嵌入式系统通讯的主机。</p><p><strong>Task</strong>（任务） The central abstraction of an operating system. Each<br>task must maintain its own copy of the instruction pointer and<br>general-purpose registers. Unlike processes, tasks share a common memory<br>space and must be careful to avoid overwriting each other&quot;s code and<br>data.</p><p><strong>Thread</strong>（线程） Another name for a task. This name is more common in<br>operating systems that support processes. A task is simply a thread in a<br>single-process system.</p><p><strong>Tracepoint</strong> （跟踪点） Like a breakpoint except that a counter is<br>incremented rather than stopping the program. Tracepoints are not<br>supported by all debugging tools.<br>象中断点，除了停止程序时，计数器还被增加外。跟踪点不是被所有的调试工具支持。</p><p><strong>Trap</strong>（陷入） An interruption of a program that is triggered by the<br>processor&quot;s own internal hardware. For example, the processor might<br>trap if an illegal opcode is found within the program. Compare with<br>software interrupt.<br>一个由处理器内部硬件触发的程序中断。例如，处理器可能在一个错误的代码在程序中被发现时陷入。对比软件中断。</p><p><strong>V</strong></p><p><strong>volatile</strong>（动态） A value that may change without the intervention of<br>software is said to be volatile. For example, values within the<br>registers of some I&#x2F;O devices may change in response to external events.<br>C&quot;s volatile keyword should be used to warn your compiler about any<br>pointers that point to such registers. This will ensure that the actual<br>value is reread each time the data is used.<br>一个可能不需要软件的的干涉就可改变的值被叫作动态。例如：在一些I&#x2F;O设备的寄存器的值可能在响应外部事件时被改变。C语言中的volatile关键字被用来警告你的编译器那是一个指向一些寄存器的指针，请不要优化它。这个将确认在数据使用中的每一时间实际的值是要重新读入的。</p><p><strong>W</strong></p><p><strong>watchdog timer</strong>（看门狗定时器） A hardware timer that is periodically<br>reset by software. If the software crashesor hangs, the watchdog timer<br>will expire, and the entire system will be reset automatically.<br>一种由软件定时重设的硬件定时器。如果软件被破坏而挂起，看门狗定时器将超时，整个系统将自动重启。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2025/09/03/The-charm-of-photography/"/>
    <url>/2025/09/03/The-charm-of-photography/</url>
    
    <content type="html"><![CDATA[<p>摄影</p><p>2025年6月5日</p><p>17:03</p><p> </p><h1 id="相机拍摄知识"><a href="#相机拍摄知识" class="headerlink" title="相机拍摄知识"></a>相机拍摄知识</h1><ul><li><p>相机结构的发展:</p></li><li><p>[[镜头(LENS)]{.underline}](onenote:#摄影&amp;section-id&#x3D;{3183F192-B982-4C5B-83D3-A500B097B0FD}&amp;page-id&#x3D;{1381465D-D783-4166-8F67-4265A0BB0A78}&amp;object-id&#x3D;{72A05052-561B-44B5-B2C3-199BD7A9711C}&amp;27&amp;base-path&#x3D;C:\Users\Win\Documents\OneNote 笔记本\我的笔记本\生活常识.one)</p></li><li><p>[[专业名词]{.underline}](onenote:#摄影\航拍&amp;section-id&#x3D;{3183F192-B982-4C5B-83D3-A500B097B0FD}&amp;page-id&#x3D;{1381465D-D783-4166-8F67-4265A0BB0A78}&amp;object-id&#x3D;{00B51A1B-23BA-4FB1-9DFC-2FF61DBB596B}&amp;FE&amp;base-path&#x3D;C:\Users\Win\Documents\OneNote 笔记本\我的笔记本\生活常识.one)</p></li><li><p>[[专业功能]{.underline}](onenote:#摄影\航拍&amp;section-id&#x3D;{3183F192-B982-4C5B-83D3-A500B097B0FD}&amp;page-id&#x3D;{1381465D-D783-4166-8F67-4265A0BB0A78}&amp;object-id&#x3D;{96BA7BCA-1D5C-4B9E-90AD-3E506A06FE67}&amp;35&amp;base-path&#x3D;C:\Users\Win\Documents\OneNote 笔记本\我的笔记本\生活常识.one)</p></li></ul><blockquote><p> </p><p>古老的针孔相机结构:</p><p><img src="/media/image1.png">{width&#x3D;”11.8125in” height&#x3D;”7.958333333333333in”}</p><p> </p><p>现代机械相机结构</p><p><img src="/media/image2.png">{width&#x3D;”12.555555555555555in”<br>height&#x3D;”5.402777777777778in”}</p><p> </p><p><img src="/media/image3.png">{width&#x3D;”12.104166666666666in”<br>height&#x3D;”7.479166666666667in”}</p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a></h2><blockquote><p>镜头(LENS):</p><p>【广角、标准、长焦、终于有人讲明白什么焦段拍照最出片了！】<a href="https://www.bilibili.com/video/BV1wYwreJETm?vd_source=5767586c517a3d55d7f62e9806352116">[https://www.bilibili.com/video/BV1wYwreJETm?vd_source&#x3D;5767586c517a3d55d7f62e9806352116]{.underline}</a></p><p>WIDE:广角:</p></blockquote><ul><li><p>焦距：通常为24mm到35mm左右（全画幅相机）。</p></li><li><p>特点：</p></li><li><p>视野广阔，适合拍摄大场景、风景或多人合影。</p></li><li><p>可以营造出夸张的透视效果，增强空间感。</p></li><li><p>适用场景：风光摄影、建筑摄影、街头摄影。</p></li></ul><blockquote><p> </p><p>UW:超广角:</p></blockquote><ul><li>超广角镜头是一种用于相机或摄像机的特殊镜头，具有极宽的视角，通常大于85度。这种镜头设计使得在拍摄时能涵盖更广阔的景象，特别适合用于风景、建筑以及集体照等需要展现大面积场景的照片或视频。</li></ul><blockquote><p> </p><p>TELE*5X:长焦(定焦和变焦,下面为变焦标准镜头)</p></blockquote><ul><li><p>焦距：通常为70mm到300mm以上（全画幅相机）。</p></li><li><p>特点：</p></li><li><p>能够拉近被摄物体，适合拍摄远处的景物或人像。</p></li><li><p>压缩空间感，使背景虚化效果更好。</p></li><li><p>适用场景：野生动物摄影、体育赛事、人像摄影。</p></li></ul><!-- --><ul><li><img src="/media/image4.png">{width&#x3D;”6.659722222222222in”<br>height&#x3D;”6.222222222222222in”}</li></ul><blockquote><p> </p><p> </p></blockquote><h2 id="专业名词"><a href="#专业名词" class="headerlink" title="专业名词:"></a>专业名词:</h2><h2 id="拍照模式"><a href="#拍照模式" class="headerlink" title="拍照模式:"></a>拍照模式:</h2><blockquote><p>街拍\夜景(高ISO,低快门速度)\人脸(大光圈)\全景(广角镜头)\视频录像\超广角</p><p> </p><p>HDR高动态范围:High Dynamic<br>Range,主要作用是通过结合不同曝光的照片，生成一张包含更多细节和更宽广的亮度范围的照片,HDR能够捕捉到更多的亮部和暗部细节，使得在强光和阴影中都能保留细节(比如在亮暗差距明显的环境下,相机拍摄的画面要么偏亮要么偏暗,并且会失去一些色彩信息,通过HDR可以更有冲击力)</p><p><img src="/media/image5.png">{width&#x3D;”11.13888888888889in”<br>height&#x3D;”5.583333333333333in”}</p><p> </p><p>微距模式:专门用于近距离拍摄小物体或者表面细节，如昆虫、花朵等。具有高分辨率和较长的最近对焦距离。</p><p> </p><p>移轴(Tilt shift lens):</p><p>Tilt 控制镜头仰俯和倾角</p><p>Shift控制镜头左右</p><p><img src="/media/image6.png">{width&#x3D;”9.26388888888889in”<br>height&#x3D;”3.5833333333333335in”}</p><p> </p><p><img src="/media/image7.png">{width&#x3D;”10.631944444444445in” height&#x3D;”9.0625in”}</p><p> </p><p><img src="/media/image8.png">{width&#x3D;”12.972222222222221in”<br>height&#x3D;”8.354166666666666in”}</p><p> </p><p>调整完,焦平面和和像场存在夹角,这样远近景深,就会变为左右&#x2F;上下景深(沙姆定律),这时候扭动对焦环就会发现很难对在同一平面的内的物体对焦拍清晰</p><p>因为他们都不在一个平面上,这就导致同一时刻只能有一小部分是清晰的,又因为这一特性,移轴镜头的拍照范围会比普通相机广这就能拍出舍弃的效果(朦胧的镜头感),比如拍照镜子的人,但相机不会被拍进去(向左右移轴)</p><p><img src="/media/image9.png">{width&#x3D;”8.402777777777779in”<br>height&#x3D;”7.395833333333333in”}</p><p> </p><p><img src="/media/image10.png">{width&#x3D;”6.840277777777778in”<br>height&#x3D;”6.027777777777778in”}</p><p> </p><p><img src="/media/image11.png">{width&#x3D;”6.979166666666667in”<br>height&#x3D;”6.145833333333333in”}</p><p> </p><p>【整个世界都变成玩具？！辗转多地拍摄，玩转移轴摄影】</p><p><a href="https://www.bilibili.com/video/BV1uZ4y1y7PV?vd_source=5767586c517a3d55d7f62e9806352116">[https://www.bilibili.com/video/BV1uZ4y1y7PV?vd_source&#x3D;5767586c517a3d55d7f62e9806352116]{.underline}</a></p><p>移轴镜头能把大世界拍出微缩效果。其实是来自人们对微距摄影感受的一种迁移。在微距摄影中，超近距离产生了极浅的景深，呈现在画面上就是”只有一条线附近是清晰的，其他都是模糊的”效果。而用普通镜头拍摄大世界，不可能拍出这种效果。这时候就需要移轴镜头，来呈现和微距摄影类似的景深效果，这样就让人产生了”微缩世界”的感觉,最初被用在拍高大建筑上,<br>因为在拍高打建筑时,为了拍全貌,镜头要向上抬起,这样就会出现上小下大的畸变,移轴镜头则可以在机身保持不变的情况下实现镜头倾斜和移动,因为人视觉系统加上心智模型,在看远景的时候周围物体会清晰(眼睛看远处时,可以类似于广角镜头因为焦点视野里面的物体多了),在看近景的时候,就会出现观察的事物清晰,旁边的事物模糊的情况(所以出现浅景深的轻快下,小脑瓜就会以为在拍近景)</p><p> </p><p><img src="/media/image12.png">{width&#x3D;”10.145833333333334in”<br>height&#x3D;”4.173611111111111in”}</p><p> </p><p><img src="/media/image13.png">{width&#x3D;”9.9375in” height&#x3D;”5.5in”}</p><p> </p><p><img src="/media/image14.png">{width&#x3D;”16.5625in” height&#x3D;”7.958333333333333in”}</p><p> </p><p><img src="/media/image15.png">{width&#x3D;”10.527777777777779in”<br>height&#x3D;”4.569444444444445in”}</p><p> </p><p><img src="/media/image16.png">{width&#x3D;”9.0625in” height&#x3D;”6.020833333333333in”}</p><p> </p><p><img src="/media/image17.png">{width&#x3D;”10.82638888888889in”<br>height&#x3D;”4.784722222222222in”}</p><p> </p><p> </p><p>慢动作拍摄:一种视频拍摄技术，通过以高于正常帧率（Frame Per Second,<br>FPS）记录视频，使播放时(先1s拍两张,之后播放的时候再1s播放一张,达到慢放的效果)的动作显得更缓慢。这种技术可以捕捉到肉眼难以看到的细节，常用于体育、舞蹈、自然摄影等领域。慢动作视频可能会导致声音与画面不同步，需要在后期处理时进行对齐</p><p>帧率（FPS）：慢动作拍摄的关键是使用高于正常帧率的模式。例如：</p><p>1080p @ 60 FPS</p><p>4K @ 120 FPS 或更高</p><p>选择合适的帧率：根据你的需求选择，帧率越高，动作越慢。但高帧率也会占用更多存储空间。</p><p>快门速度与帧率相关联：</p><p>帧率为60 FPS时，快门速度通常为1&#x2F;60 秒。</p><p>高帧率（如120 FPS）时，快门速度会相应降低到1&#x2F;120 秒。</p><p> </p><p>延时摄影:</p><p>【摄影科普】什么是延时摄影？】<a href="https://www.bilibili.com/video/BV12J4m1T74t?vd_source=5767586c517a3d55d7f62e9806352116">[https://www.bilibili.com/video/BV12J4m1T74t?vd_source&#x3D;5767586c517a3d55d7f62e9806352116]{.underline}</a></p><p>将一段长时间的画面内容浓缩在一段小素材里面(与慢动作摄影正相反,慢动作是插帧,那延迟摄影就是减帧,可以类比为快进)</p><p>除了快进还有什么方法实现延迟摄影-&gt;还可以在一定时间内拍指定帧数的图片,下面举例:</p><p>将一个25帧率5min的素材压缩到25帧5s的视频里1.可以将视频加速播放60倍<br>2.可以从素材中,按等时间间隔抽取25*5张画面</p><p>延迟摄影正是这个原理(按照设定的时间间隔,均匀的依次记录静态画面),也称为间隔拍摄-Timelapes<br>Photography</p><p>时间间隔计算方式:25*60*5&#x2F;(25*5)&#x3D;60<br>fps&#x2F;s,因此可以通过每隔60s取一帧达到和快进同样的要求,但由于存在间隔拍摄,所以画面会突变,一般结合长曝光,增强运动模糊效果让画面更有运动信息看起来更流畅,削弱突变感(如果拍照对象运动快或者变化大),者就要保证长曝光时间要小于快门释放间隔时间</p><p> </p><p>长曝光:快门保持开启较长时间，一般用于拍摄夜景,以捕捉光线的变化轨迹或营造特殊的视觉效果。这种技术常用于拍摄移动物体（如车流、瀑布）或在低光环境下获得足够的光线,但要防止过曝和处理噪点</p><p> </p><p>鱼眼:可以产生强烈的扭曲和夸张效果(无人机上常用的全景摄影),为了获取更大的视场角且不会出现边缘暗角,采用了玻璃半球为折射媒介进行采样的方式,因为入射光经过球心,所以经过一次折射后,出射光进入到空气不会发生二次偏折</p><p>推荐资料:</p><p>【鱼眼镜头如何改变了人类生活】<a href="https://www.bilibili.com/video/BV1PW4y1o7m1?vd_source=5767586c517a3d55d7f62e9806352116">[https://www.bilibili.com/video/BV1PW4y1o7m1?vd_source&#x3D;5767586c517a3d55d7f62e9806352116]{.underline}</a></p><p><img src="/media/image18.png">{width&#x3D;”16.569444444444443in”<br>height&#x3D;”7.083333333333333in”}</p><p> </p><p><img src="/media/image19.png">{width&#x3D;”11.743055555555555in”<br>height&#x3D;”8.472222222222221in”}</p><p> </p><p><img src="/media/image20.png">{width&#x3D;”10.083333333333334in” height&#x3D;”8.3125in”}</p><p> </p><p><img src="/media/image21.png">{width&#x3D;”13.82638888888889in”<br>height&#x3D;”7.833333333333333in”}</p></blockquote><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><h2 id="专业功能"><a href="#专业功能" class="headerlink" title="专业功能:"></a>专业功能:</h2><blockquote><p>光焦分离:光圈（控制进光量）和对焦系统（如自动对焦马达）在物理结构上分开配置。这种设计有助于减少机械运动对其他光学元件的影响，从而提高图像质量</p><p> </p><p>对焦(F):保证拍摄主体的清晰,分为手动对焦(MF)和自动对焦(AF(AF-A自动选择拍静止还是运动&#x2F;AF-S静物&#x2F;AF-C运动)),当拍摄主体不明显的时候,需要我们手动对焦来保证主体的清晰度</p><p><img src="/media/image22.png">{width&#x3D;”8.125in” height&#x3D;”4.354166666666667in”}</p><p>AF对焦方式:单点对焦(11对焦点)\区域对焦</p><p><img src="/media/image23.png">{width&#x3D;”8.756944444444445in”<br>height&#x3D;”5.097222222222222in”}</p><p>峰值对焦:峰值对焦是一种辅助对焦工具，尤其在手动模式下非常有用。当启用此功能时，相机会在检测到高对比度边缘时，在LCD屏幕上突出显示这些区域，通常用彩色轮廓或亮度变化表示。</p><p> </p><p>测光:矩阵测光\点测光\中心重点测光</p></blockquote><ul><li><p>点测光测量范围非常小，仅集中在画面中央的一个极小区域（约1%-5%的面积）。</p></li><li><p>矩阵测光通过多个传感器点（如分区矩阵）测量光线，并结合场景信息（如距离、对比度）进行综合计算。常用于复杂光源环境，适合拍摄主体位于画面任意位置的情况。</p></li><li><p>中心重点测光的测光范围集中在画面中央区域，周围区域的亮度会被弱化。适合拍摄主体位于画面中央的情况</p></li></ul><blockquote><p><img src="/media/image24.png">{width&#x3D;”11.07638888888889in”<br>height&#x3D;”4.645833333333333in”}</p><p> </p><p> </p><p>曝光四要素:快门\光圈\感光度\曝光补偿</p><p><img src="/media/image25.png">{width&#x3D;”9.70138888888889in”<br>height&#x3D;”7.152777777777778in”}</p><p>快门速度(S):指相机感光元件（胶片或图像传感器）暴露在光线下的时间长度,高速快门(1&#x2F;1000<br>秒或更快)一般用于捕捉动态物体的运动(瞬间动作),低速快门（如 1&#x2F;4<br>秒或更慢）：用于拍摄动态模糊效果，例如水流等。</p><p><img src="/media/image26.png">{width&#x3D;”8.909722222222221in”<br>height&#x3D;”2.2291666666666665in”}</p><p> </p><p>光圈:控制相机进光量,也影响景深(入瞳径与容许弥散圆决定</p><p>)</p></blockquote><ul><li>【爆肝两个月 |<br>用动画的方式揭开光圈和景深的秘密——掌控曝光（—）】<a href="https://www.bilibili.com/video/BV1t24y1k7Ye?vd_source=5767586c517a3d55d7f62e9806352116">[https://www.bilibili.com/video/BV1t24y1k7Ye?vd_source&#x3D;5767586c517a3d55d7f62e9806352116]{.underline}</a></li></ul><!-- --><ul><li><p>光圈越大（如f&#x2F;2.8），进入镜头的光线越多，适合在光线较弱的环境下拍摄，能够提高快门速度或降低ISO，从而获得更清晰和细腻的照片。大光圈（如f&#x2F;4）能够实现浅景深，使主体突出，背景虚化。这对于人像摄影尤为重要，可以营造出柔和的背景效果。</p></li><li><p>光圈越小（如f&#x2F;16），进入的光线较少，通常需要增加曝光时间或提高ISO来补偿，但可能会导致画面模糊或噪点增加。小光圈（如f&#x2F;8或更高）则能增加景深，使前景到背景的景物都保持清晰，适合风景摄影或团体照</p></li><li><p><img src="/media/image27.png">{width&#x3D;”8.82638888888889in”<br>height&#x3D;”2.2291666666666665in”}</p></li></ul><blockquote><p> </p></blockquote><ul><li><img src="/media/image28.png">{width&#x3D;”14.645833333333334in”<br>height&#x3D;”7.631944444444445in”}</li></ul><blockquote><p> </p><p> </p><p>感光度(ISO):用于衡量相机感光元件对光线的敏感度,决定了相机在弱光环境下捕捉清晰图像的能力,但高ISO会出现噪点,影像画质,因此默认不要开太高</p><p><img src="/media/image29.png">{width&#x3D;”8.125in” height&#x3D;”4.013888888888889in”}</p><p> </p><p> </p><p>曝光补偿(EV):摄影中用于调整照片整体亮度的一项技术,是指在相机的半自动模式（如光圈优先和快门优先）下，用户可以手动调整照片的整体亮度。例如，在逆光拍摄人像时，自动对焦可能会测光不准确，导致主体过暗。这时通过增加正向的EV值，可以提升主体的亮度，改善照片效果.</p><p><img src="/media/image30.png">{width&#x3D;”11.222222222222221in”<br>height&#x3D;”5.631944444444445in”}</p><p> </p><p> </p><p>在相机中，饱和度、对比度和锐度是常见的图像调整功能，用于优化照片的色彩、细节和清晰程度。</p><p>饱和度:饱和度控制照片中颜色的强度或纯度。高饱和度会使颜色更鲜艳(花朵)、更生动；低饱和度则会让颜色更柔和、更接近灰调(人像)</p><p>对比度:对比度调整照片中亮部和暗部之间的差异。高对比度会让图像中的明暗区域更加分明；低对比度则会使图像整体看起来更柔和、更接近中间色调</p><p>锐度:锐度调整照片中细节和边缘的清晰度。高锐度会让图像中的线条、纹理和细节更加清晰；低锐度则会使图像看起来模糊或柔和(磨皮)</p><p> </p><p>白平衡(WB):用于调整图像的颜色，<strong>以确保白色物体在照片中呈现为白色</strong>，并且其他颜色也能够准确还原。</p><p><img src="/media/image31.png">{width&#x3D;”11.07638888888889in”<br>height&#x3D;”4.722222222222222in”}</p><p> </p><p>结合尼康进行说明:</p><p><img src="/media/image32.png">{width&#x3D;”16.04861111111111in” height&#x3D;”8.5625in”}</p><p> </p><p><img src="/media/image33.png">{width&#x3D;”10.104166666666666in”<br>height&#x3D;”9.069444444444445in”}</p><p> </p><p> </p><p><img src="/media/image34.png">{width&#x3D;”10.82638888888889in”<br>height&#x3D;”10.76388888888889in”}</p><p> </p><p> </p><p> </p><p><img src="/media/image35.png">{width&#x3D;”7.895833333333333in” height&#x3D;”1.75in”}</p><p> </p><p><img src="/media/image36.png">{width&#x3D;”8.854166666666666in”<br>height&#x3D;”8.79861111111111in”}</p><p> </p><p> </p><p> </p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2025/09/03/book-list/"/>
    <url>/2025/09/03/book-list/</url>
    
    <content type="html"><![CDATA[<p>书单</p><p>2025年8月12日</p><p>9:42</p><p> </p><h1 id="目录"><a href="#目录" class="headerlink" title="目录:"></a>目录:</h1><ul><li><p><a href="onenote:#书单&section-id={E7C96EDB-CA4D-DC46-9C01-6ADE62B9179D}&page-id={986C71E4-9FA5-41C6-B105-BD1321E6969D}&object-id={EE816704-D677-0C42-2D44-E0724342A659}&21&base-path=https://d.docs.live.net/f83522110832e6bf/ドキュメント/我的笔记本/生活常识.one">[鲁迅文学]{.underline}</a></p></li><li><p><a href="onenote:#书单&section-id={E7C96EDB-CA4D-DC46-9C01-6ADE62B9179D}&page-id={986C71E4-9FA5-41C6-B105-BD1321E6969D}&object-id={EE816704-D677-0C42-2D44-E0724342A659}&26&base-path=https://d.docs.live.net/f83522110832e6bf/ドキュメント/我的笔记本/生活常识.one">[记忆迷宫&#x2F;追风筝的人&#x2F;追影子的人]{.underline}</a></p></li><li><p><a href="onenote:#书单&section-id={E7C96EDB-CA4D-DC46-9C01-6ADE62B9179D}&page-id={986C71E4-9FA5-41C6-B105-BD1321E6969D}&object-id={EE816704-D677-0C42-2D44-E0724342A659}&29&base-path=https://d.docs.live.net/f83522110832e6bf/ドキュメント/我的笔记本/生活常识.one">[1984&#x2F;美丽新世界]{.underline}</a></p></li><li><p><a href="onenote:#书单&section-id={E7C96EDB-CA4D-DC46-9C01-6ADE62B9179D}&page-id={986C71E4-9FA5-41C6-B105-BD1321E6969D}&object-id={EE816704-D677-0C42-2D44-E0724342A659}&31&base-path=https://d.docs.live.net/f83522110832e6bf/ドキュメント/我的笔记本/生活常识.one">[穷查理宝典]{.underline}</a>&#x2F;认知觉醒&#x2F;小岛经济学</p></li><li><p><a href="onenote:#书单&section-id={E7C96EDB-CA4D-DC46-9C01-6ADE62B9179D}&page-id={986C71E4-9FA5-41C6-B105-BD1321E6969D}&object-id={C665B6EF-351E-0E5A-0457-F333A69782A6}&6D&base-path=https://d.docs.live.net/f83522110832e6bf/ドキュメント/我的笔记本/生活常识.one">[自私的基因]{.underline}</a></p></li><li><p><a href="onenote:#书单&section-id={E7C96EDB-CA4D-DC46-9C01-6ADE62B9179D}&page-id={986C71E4-9FA5-41C6-B105-BD1321E6969D}&object-id={C665B6EF-351E-0E5A-0457-F333A69782A6}&71&base-path=https://d.docs.live.net/f83522110832e6bf/ドキュメント/我的笔记本/生活常识.one">[非暴力沟通]{.underline}</a></p></li></ul><blockquote><p> </p><p> </p><p> </p><p>鲁迅:狂人日记,孔乙己,闰土,啊Q正传,药</p><p>德国:记忆迷宫 追风筝的人,追影子的人</p><p>1984&#x2F;美丽新世界(乌托邦和放乌托邦)</p><p>穷查理宝典:</p></blockquote><ul><li><p><strong>多元思维模型</strong>：芒格主张整合数学、心理学、经济学等多学科知识，构建<br>“思维模型工具箱”，形成对问题的立体化认知。例如分析企业时，可结合复利模型、护城河理论、激励扭曲等模型。他提出的<br>Lollapalooza 效应，指多个学科模型叠加会产生非线性效果。</p></li><li><p><strong>逆向思考</strong>：秉持 “反过来想”<br>的原则，先思考哪些错误会导致失败，再寻找正确路径。投资前要明确<br>“价格与价值”<br>的本质区别，避免高估市场情绪。还可列出负面清单，规避道德风险、认知偏差等风险，也可用于生活决策，避免拖延、过度消费等低效习惯。</p></li><li><p><strong>能力圈原则</strong>：强调<br>“只打高概率的球”，仅在自己深度理解的领域行动，如可口可乐、比亚迪等商业模式清晰的企业。通过终身学习缓慢拓展认知边界，同时避免涉足技术路线模糊的领域。判断是否在能力圈内可问自己三个问题：能否用一句话解释企业核心竞争力？是否理解行业底层驱动力？能否预测<br>5 年后格局？</p></li><li><p><strong>长期主义与价值投资</strong>：坚持<br>“以合理价格买入卓越企业”，关注企业内在价值而非短期波动。买入价格应低于内在价值<br>30%，预留风险缓冲空间。利用复利效应，避免频繁交易，同时利用市场先生的情绪波动，而非被其左右。</p></li><li><p><strong>检查清单与风险管理</strong>：制定投资原则清单，优先考虑风险，测算安全边际、避免高杠杆等。决策时设置<br>24 小时冷静期，运用 10-10-10 法则，评估决策在 10 分钟、10 个月、10<br>年后的影响，优化决策流程。</p></li><li><p><strong>道德与诚信</strong>：强调<br>“诚实是最好的策略”，认为正直与声誉是长期成功的基石。在投资中，筛选企业时优先考虑管理层诚信而非短期业绩。</p></li><li><p><strong>终身学习与自我提升</strong>：芒格倡导每日阅读，涉猎跨学科经典。采用五步学习法，即锁定领域、精读、提炼模型、跨学科链接、实践验证。他本人每年阅读数百本书，其知识积累是<br>“复利增长” 的典范。</p></li></ul><blockquote><p> </p><p>思考快与慢</p><p><strong>一、双系统理论：大脑的 “自动驾驶” 与 “手动模式”</strong></p><p>卡尼曼将思维分为两套系统，解释了人类决策的双重性：</p></blockquote><ul><li><p><strong>系统 1（快思考）</strong></p><ul><li><p><strong>特性：直觉、自动化、无意识，依赖经验与情绪，能耗低但易受偏差影响。</strong></p></li><li><p><strong>功能：处理日常简单任务（如识别面孔、计算 2+2），通过<br>“启发式”（经验法则）快速决策。例如，看到穿制服的人会直觉认为其<br>“可靠”，这是代表性偏差的体现。</strong></p></li><li><p><strong>局限性：易陷入锚定效应（如房地产经纪人因高价房源清单高估其他房屋价值）、可得性偏差（因近期事件高估风险）等认知陷阱。</strong></p></li></ul></li><li><p><strong>系统 2（慢思考）</strong></p><ul><li><p><strong>特性：理性、需专注、逻辑性强，能耗高但更精准，擅长处理复杂问题（如计算<br>15×78）。</strong></p></li><li><p><strong>启动条件：当系统 1<br>遇到挑战（如数据矛盾）或需深度分析时介入，但常因 “懒惰” 被系统 1<br>主导。</strong></p></li><li><p><strong>缺陷：持续使用会导致决策疲劳（如法官饭前更易拒绝保释申请），且易被系统<br>1 的替代效应干扰（用简单问题偷换复杂问题）。</strong></p></li></ul></li></ul><blockquote><p><strong>二、认知偏差的根源：系统 1 的 “思维捷径”</strong></p><p>系统 1 的启发式思维虽提高效率，却导致系统性错误：</p></blockquote><ul><li><p><strong>代表性偏差</strong></p><ul><li><strong>用刻板印象简化判断。例如，认为 “琳达既是银行职员又是女权主义者”<br>的概率高于 “琳达是银行职员”（琳达问题），忽视概率的基本规则。</strong></li></ul></li><li><p><strong>锚定效应</strong></p><ul><li><strong>初始信息对后续判断的强烈影响。实验显示，房地产经纪人看到高价房源清单后，会系统性高估其他房屋价值。</strong></li></ul></li><li><p><strong>框架效应</strong></p><ul><li><strong>同一事实的不同表述影响决策。例如，”90% 存活率” 比 “10% 死亡率”<br>更易被接受。</strong></li></ul></li><li><p><strong>WYSIATI（你所看到的就是全部）</strong></p><ul><li><strong>仅基于有限信息做判断，忽略潜在缺失数据。例如，面试时因候选人一次演讲表现优秀，就默认其具备管理能力（光环效应）。</strong></li></ul></li></ul><blockquote><p><strong>三、决策优化：驯服系统 1 的非理性</strong></p><p>卡尼曼提出以下策略，通过系统 2 的理性干预减少偏差：</p></blockquote><ul><li><p><strong>主动激活系统 2</strong></p><ul><li><p><strong>设置减速带：复杂决策前强制停顿（如 24<br>小时冷静期），避免直觉主导。</strong></p></li><li><p><strong>引入外部视角：参考标准化评分表或历史数据，而非依赖个人经验。例如，用人决策时使用结构化面试而非<br>“直觉印象”。</strong></p></li></ul></li><li><p><strong>对抗认知偏差</strong></p><ul><li><p><strong>反事实思考：质疑 “后见之明偏差”（如<br>“我早就知道会这样”），通过列举其他可能性验证判断。</strong></p></li><li><p><strong>多元信息输入：打破确认偏误，主动接触对立观点（如自由派阅读保守派新闻）。</strong></p></li></ul></li><li><p><strong>组织防错机制</strong></p><ul><li><p><strong>决策清单化：制定明确规则（如投资前测算安全边际），减少个体偏差对团队的影响。</strong></p></li><li><p><strong>峰终定律应用：在关键节点强化积极体验（如病中探望），利用记忆的<br>“峰值 - 终点” 特性优化关系维护。</strong></p></li></ul></li></ul><blockquote><p><strong>四、理论价值与现实意义</strong></p></blockquote><ul><li><p>*<em>颠覆理性人假设*</em><br>卡尼曼的研究为行为经济学奠定基础，证明人类决策常受情绪、认知局限影响，而非完全理性。例如，<strong>前景理论</strong>揭示人们对损失的痛苦感是收益快感的<br>2 倍，解释了风险厌恶行为。</p></li><li><p><strong>跨领域应用</strong></p><ul><li><p><strong>公共政策：设计 “助推” 机制（如器官捐赠默认选项）引导理性选择。</strong></p></li><li><p><strong>商业实践：利用曝光效应（重复广告增强好感）和框架效应（”节省 30%”<br>比 “支付 70%” 更有效）提升营销效果。</strong></p></li></ul></li><li><p><em><em>个体认知升级*</em><br>理解双系统运作规律后，人们可通过</em><em>刻意练习</em>*（如每日复盘决策过程）逐步拓展系统<br>2 的控制力，在关键领域实现 “慢思考主导”。</p></li></ul><blockquote><p> </p><p>认知觉醒</p></blockquote><ul><li><p><strong>大脑的三重结构</strong>：人类大脑由本能脑、情绪脑、理智脑构成，分别对应生存本能、情感需求和理性决策。理智脑虽高级但力量薄弱，常被本能与情绪脑主导，导致人们<br>“避难趋易、急于求成”。</p></li><li><p><strong>在舒适区边缘成长</strong>：成长要走出舒适区，但并非一步跨到困难区，而是在舒适区边缘（拉伸区）拓展自己。在这个区域，人们既能付出努力后获得正反馈，又具有一定挑战，进步会更快。</p></li><li><p><strong>元认知</strong>：元认知是<br>“对思考的思考”，即通过反思与觉察提升自我掌控力。它像 “第三视角”<br>般监督思维与行为，帮助人跳出惯性反应。可通过每日复盘、冥想和写作等方法培养元认知，如记录触动点并关联已有知识，形成个人认知体系。</p></li><li><p><strong>消除模糊，清晰行动</strong>：焦虑与低效源于认知或行动的模糊。通过写下来明确目标、拆解步骤，能有效降低大脑的决策能耗。情绪模糊时可追问深层原因，行动模糊时应制定具体计划，学习模糊时则聚焦错题与难点。</p></li><li><p><strong>深度学习的复利效应</strong>：学习需从表层输入转向深度实践，遵循 “获取 —<br>关联 — 输出”<br>的路径。例如，阅读后用自己的语言复述、写作或教授他人，将知识缝接入认知网络。复利曲线表明，前期积累看似缓慢，但跨越拐点后将迎来爆发式成长。</p></li><li><p><strong>行动五件套</strong>：包括早起、冥想、阅读、写作和运动。早起可利用睡眠周期理论，在睡眠节点醒来，创造高效时间；冥想能提升专注力，抑制思维涣散；阅读可通向高密度思考，选书要遵循舒适区边缘法则，阅读后要实践；写作可通过输出倒逼深度思考；运动能促进神经元生长，优化大脑功能。</p></li></ul><blockquote><p> </p><p> </p><p>自私的基因:</p></blockquote><ul><li><p><strong>基因是自然选择的基本单位</strong>：自然选择的基本单位不是个体、群体或物种，而是基因。基因为了自身的延续，塑造并驱动个体的一切行为。</p></li><li><p><strong>生物是基因的生存机器</strong>：个体存在的意义在于成为基因的临时载体与传播工具。生命本质上是基因信息的延续，而非个体的荣耀。</p></li></ul><!-- --><ul><li><strong>自私的基因创造<br>“条件性利他”</strong>：基因是自私的，但为了更好地传播，有时会演化出<br>“有限利他”<br>行为。比如:群居生物中有专门负责警戒的个体,亲属之间的相互帮助.利他并非出于高尚情感，而是为了最终的自利，是一种博弈结果。</li></ul><blockquote><p>所有条件性利他行为，本质上都是基因在 “计算”<br>收益后的策略：<strong>利他是手段，基因存续是目的</strong>。利他行为的发生与否，取决于<br>“付出的成本” 与 “基因延续的收益”<br>之间的权衡，一旦条件不满足（如无亲属关联、无互惠可能、群体收益失衡），利他便会消失</p></blockquote><ul><li><p><strong>进化稳定策略（ESS）</strong>：在特定环境中，某种行为模式一旦被大多数个体采纳，就很难被少数其他策略击败，是一种经过无数次筛选后达成的<br>“局部最优” 状态，能在演化中自我维持。</p></li><li><p><strong>亲代与子代冲突本质</strong>：亲子之间虽有血缘联系，但在基因层面并非完全<br>“和谐”。父母希望合理分配资源给所有子女以保障整体基因的延续，而子女则本能地希望获得更多资源以增加自身竞争力，这种冲突是隐藏在亲情背后的生物学事实。</p></li><li><p><strong>两性冲突与性选择原理</strong>：雌雄在基因延续策略上存在差异，雌性繁殖成本高，择偶更谨慎挑剔，雄性繁殖机会多，倾向于广撒网。这种差异导致了行为上的冲突与进化上的博弈。</p></li><li><p><strong>模因（Meme）：文化的自私复制者</strong>：模因是文化中类似于基因的复制单位，如想法、旋律、时尚等。文化传播本质上是由具有自我复制、适应环境能力的模因主导，而非完全由理性控制。</p></li></ul><blockquote><p>* *</p><p> </p><p>非暴力沟通</p></blockquote><ul><li><p><strong>非暴力沟通四要素</strong>：</p><ul><li><p><strong>观察</strong>：客观描述所发生的事情，不做判断或评估，将观察与评论区分开来。例如，不说<br>“你很懒惰”，而是说 “我看到你今天没有完成分配的任务”。</p></li><li><p><strong>感受</strong>：表达自己内心的情绪体验，而不是想法。比如，当同事没有按时完成工作影响到自己时，说<br>“我感到很着急”，而不是 “你这样做很不对”。</p></li><li><p><strong>需求</strong>：认识到感受源于自身未被满足的需求，敢于说出自己的需求，同时也要理解他人的需求。例如，对伴侣说<br>“我希望你能多陪陪我，因为我需要感受到你的关心”。</p></li><li><p><strong>请求</strong>：明确表达希望他人采取的行动，以满足自己的需求，注意这不是命令或要求，而是一种开放、合作的方式。比如，对朋友说<br>“我希望你下次能提前告知我你会迟到，这样我可以更好地安排时间”。</p></li></ul></li><li><p><strong>建立连接的方法</strong>：</p><ul><li><p><strong>放下判断和预设</strong>：沟通时抛开对对方的成见、对其反应的预测等，以开放心态理解对方。</p></li><li><p><strong>真正倾听对方</strong>：不仅听对方的言语，还要关注语调、表情和身体语言，全神贯注地理解其感受和需求。</p></li><li><p><strong>表达同理心</strong>：从对方角度出发，通过重述对方的话等方式，让对方感受到被理解和尊重，如<br>“听起来你很沮丧，是因为事情没有按计划进行吗”。</p></li><li><p><strong>避免评判和指责</strong>：评判和指责会让对方产生防御心理，应寻找共同点，表达对对方情感的理解。</p></li><li><p><strong>创造安全的环境</strong>：展现出开放和接纳的态度，让对方能自由表达，不用担心被评判或批评。</p></li></ul></li></ul><blockquote><p> </p><p> </p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
